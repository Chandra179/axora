version: '3.5'

services:

  axora-crawler:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: axora-crawler
    environment:
      APP_PORT: 8080
      PROXY_URL: http://axora-tor-proxy:3128
      POSTGRES_DB_URL: postgres://postgres:postgres@axora-postgres:5432/axora?sslmode=disable
      DOWNLOAD_PATH: /app/downloads
      DOCKER_BUILDKIT: 1
      KAFKA_URL: axora-kafka:9092
    ports:
      - "8080:8080"
    networks:
      - axora-network
    volumes:
      - ./downloads:/app/downloads
      - ./domains.yaml:/app/domains.yaml
    depends_on:
      axora-postgres:
        condition: service_healthy
      axora-tor-proxy:
        condition: service_started
      axora-kafka:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '3.0'
          memory: 3G
        reservations:
          cpus: '1.0' 
          memory: 1G

  # DEVELOPMENT MODE: Mount code directly for instant changes
  axora-extractor:
    build:
      context: .
      dockerfile: Dockerfile.piton
      target: builder  # Stop at builder stage - has venv but no code copied
    container_name: axora-extractor
    environment:
      KAFKA_URL: axora-kafka:9092
      PATH: /opt/venv/bin:/usr/local/bin:/usr/bin:/bin
      PYTHONUNBUFFERED: 1
    depends_on:
      axora-kafka:
        condition: service_healthy
    networks:
      - axora-network
    volumes:
      - .:/app:cached  # Mount code directly - instant changes!
      - /app/__pycache__  # Exclude Python cache
      - /app/.pytest_cache  # Exclude pytest cache
    working_dir: /app/extractor
    command: python main.py

  axora-tor-proxy:
    image: zhaowde/rotating-tor-http-proxy
    container_name: axora-tor-proxy
    ports:
      - "3128:3128"
    environment:
      TOR_INSTANCES: 10
      TOR_REBUILD_INTERVAL: 600
      TOR_EXIT_COUNTRY: jp,tw,th,id,sg
    networks:
      - axora-network

  axora-postgres:
    image: postgres:16-alpine
    container_name: axora-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: axora
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - axora-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  axora-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: axora-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://axora-kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@axora-kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 5
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - axora-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: axora-kafka-ui
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: axora-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: axora-kafka:9092
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
    networks:
      - axora-network
    depends_on:
      axora-kafka:
        condition: service_healthy
    restart: unless-stopped

  adminer:
    image: adminer
    container_name: axora-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - axora-network

networks:
  axora-network:
    driver: bridge

volumes:
  postgres_data:
  kafka_data: