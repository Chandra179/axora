version: '3.5'

services:
  axora-crawler:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: axora-crawler
    environment:
      APP_PORT: 8080
      PROXY_URL: http://axora-tor-proxy:3128
      DOWNLOAD_PATH: /app/downloads
      DOCKER_BUILDKIT: 1
      KAFKA_URL: axora-kafka:9092
      QDRANT_HTTP_PORT: 6333
      QDRANT_GRPC_PORT: 6334
      QDRANT_HOST: axora-qdrant
      MPNET_BASEV2_URL: http://axora-mpnetbasev2:8000
    ports:
      - "8080:8080"
    networks:
      - axora-network
    volumes:
      - ./downloads:/app/downloads
      - ./domains.yaml:/app/domains.yaml
    depends_on:
      axora-tor-proxy:
        condition: service_started
      axora-mpnetbasev2:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '3.0'
          memory: 3G
        reservations:
          cpus: '1.0' 
          memory: 1G

  axora-tor-proxy:
    image: zhaowde/rotating-tor-http-proxy
    container_name: axora-tor-proxy
    ports:
      - "3128:3128"
    environment:
      TOR_INSTANCES: 10
      TOR_REBUILD_INTERVAL: 600
      TOR_EXIT_COUNTRY: jp,tw,th,id,sg
    networks:
      - axora-network
  
  axora-mpnetbasev2:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-latest
    container_name: axora-mpnetbasev2
    environment:
      - MODEL_ID=sentence-transformers/all-mpnet-base-v2
      - PORT=8000
      - MAX_CONCURRENT_REQUESTS=100
      - MAX_BATCH_TOKENS=4096
      - MAX_BATCH_REQUESTS=64
      - NUM_SHARD=1
      - CUDA_VISIBLE_DEVICES=""
      - HUGGING_FACE_HUB_TOKEN=""
    ports:
      - "8000:8000"
    volumes:
      - axora-mpnetbasev2-cache:/data
    networks:
      - axora-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  axora-qdrant:
    container_name: axora-qdrant
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - axora-network

  axora-ollama:
    image: ollama/ollama:latest
    container_name: axora-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_storage:/root/.ollama
    networks:
      - axora-network
    environment:
      - OLLAMA_MAX_LOADED_MODELS=1
      - OLLAMA_NUM_PARALLEL=1
      - OLLAMA_MAX_BATCH=2
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 12G 
        reservations:
          cpus: '2.0'
          memory: 8G 
  
  axora-ollama-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: axora-ollama-webui
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://axora-ollama:11434
    networks:
      - axora-network
    depends_on:
      - axora-ollama
    volumes:
      - ollama_webui:/app/backend/data

  axora-rag:
    build:
      context: ./rag
      dockerfile: Dockerfile.pithon
    container_name: axora-rag
    environment:
      - QDRANT_HOST=axora-qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION=crawl_collection
      - EMBEDDING_API_URL=http://axora-mpnetbasev2:8000
      - OLLAMA_HOST=http://axora-ollama:11434
      - OLLAMA_MODEL=mistral:7b-instruct-q4_0
    ports:
      - "8001:8001"
    networks:
      - axora-network
    volumes:
      - ./rag:/app
    depends_on:
      axora-qdrant:
        condition: service_started
      axora-mpnetbasev2:
        condition: service_healthy
    command: python main.py

networks:
  axora-network:
    driver: bridge

volumes:
  qdrant_storage:
  axora-mpnetbasev2-cache:
  ollama_storage:
  ollama_webui: