version: '3.5'

services:
  axora-minilml6v2:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-latest
    container_name: axora-minilml6v2
    restart: unless-stopped
    environment:
      - MODEL_ID=sentence-transformers/all-MiniLM-L6-v2
      - PORT=80
      - MAX_CONCURRENT_REQUESTS=4
      - MAX_BATCH_TOKENS=1024
      - MAX_BATCH_REQUESTS=8
      - NUM_SHARD=1
      - CUDA_VISIBLE_DEVICES=""
      - HUGGING_FACE_HUB_TOKEN=""
    ports:
      - "8000:80"
    volumes:
      - axora-model-cache:/data
    networks:
      - axora-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  axora-crawler:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: axora-crawler
    restart: unless-stopped
    environment:
      APP_PORT: ${APP_PORT}
      SERP_API_KEY: ${SERP_API_KEY}
      TEI_MODEL_CLIENT_URL: ${TEI_MODEL_CLIENT_URL}
      MILVUS_PORT: ${MILVUS_PORT}
      MILVUS_HOST: ${MILVUS_HOST}
      DOCKER_BUILDKIT: 1
    ports:
      - "${APP_PORT}:8000"
    networks:
      - axora-network
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1.5G
        reservations:
          cpus: '0.5'
          memory: 512M

  etcd:
    container_name: axora-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - axora-network

  minio:
    container_name: axora-minio
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - axora-network

  standalone:
    container_name: axora-milvus-standalone
    image: milvusdb/milvus:v2.6.0
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MQ_TYPE: woodpecker
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    networks:
      - axora-network

volumes:
  axora-weaviate-data:
  axora-model-cache:

networks:
  axora-network:
    driver: bridge